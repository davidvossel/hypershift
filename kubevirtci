#!/bin/bash                                                                                                             
                                                                                                                        
# Usage:                                                                                                                
#                                                                                                                       
# git clone git@github.com:openshift/hypershift.git                                                                     
# cd hypershift                                                                                                         
# curl -o kubevirtci https://gist.githubusercontent.com/rmohr/8324bfeea7d0823ca8cb76622eb76f56/raw/f4b6f105606fa9727cfdba5dcbd4241d4106d959/kubevirt
# chmod u+x kubevirtci                                                                                                  
#                                                                                                                       
# export CLUSTER_NAME=nargaman-test                                                                                     
# export PULL_SECRET=/root/pull-secret/pull-secret.txt                                                                  
# export SSH_KEY=/root/.ssh/id_rsa_dev.pub                                                                              
#                                                                                                                       
# ./kubevirtci up               # start a cluster with kubevirt                                                         
# ./kubevirtci kubectl capk     # Create capk image and deploy it to local registry                                     
# ./kubevirtci rhcos            # Download rhcos image and deploy it to local registry                                  
# ./kubevirtci sync             # build and deploy current hypershift                                                   
# ./kubevirtci kubectl          # Interact with the base kubevirtci cluster                                             
# ./kubevirtci hypershift       # Run hypershift util commands                                                          
# ./kubevirtci oc               # Interact with the hypershift cluster                                                  
# ./kubevirtci clean            # remoe hypershift                                                                      
# ./kubevirtci down             # destroy the cluster                                                                   
# ./kubevirt ssh-node           # ssh into node1 of the base kubevirtci cluster                                         
# ./kubevirt hypershift-create  # Create kubevirtci base cluster and hypershift cluster on it                           
# ./kubevirt hypershift-destroy # Destroy kubevirtci base cluster include the hypershift cluster on it                  
                                                                                                                        
                                                                                                                        
set -e                                                                                                                  
                                                                                                                        
export KUBEVIRT_PROVIDER=${KUBEVIRT_PROVIDER:-k8s-1.21}                                                                 
export KUBEVIRTCI_TAG=${KUBEVIRTCI_TAG:-2110251848-8198e9c}                                                             
export KUBECONFIG=$(cluster-up/cluster-up/kubeconfig.sh)                                                                
export KUBEVIRT_DEPLOY_PROMETHEUS=true                                                                                  
export KUBEVIRT_NUM_NODES=2                                                                                             
export KUBEVIRT_MEMORY_SIZE=${KUBEVIRT_MEMORY_SIZE:-10240M}                                                             
export KUBEVIRT_DEPLOY_CDI="true"
                                                                                                                        
_kubectl=cluster-up/cluster-up/kubectl.sh                                                                               
_virtctl=cluster-up/cluster-up/virtctl.sh                                                                               
_ssh=cluster-up/cluster-up/ssh.sh                                                                                       
_cli=cluster-up/cluster-up/cli.sh                                                                                       
                                                                                                                        
_action=$1                                                                                                              
shift                                                                                                                   
                                                                                                                        
function kubevirtci::fetch_kubevirtci() {                                                                               
  [[ -d cluster-up ]] || git clone https://github.com/kubevirt/kubevirtci.git cluster-up                                
  (cd cluster-up && git checkout ${KUEVIRTCI_TAG})                                                                      
}                                                                                                                       
                                                                                                                        
function kubevirtci::up() {                                                                                            
  make cluster-up -C cluster-up                                                                                         
  LATEST=$(curl -L https://storage.googleapis.com/kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/latest)         
  ${_kubectl} apply -f https://storage.googleapis.com/kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/${LATEST}/kubevirt-operator.yaml
  ${_kubectl} apply -f https://storage.googleapis.com/kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/${LATEST}/kubevirt-cr.yaml
  ${_kubectl} -n kubevirt wait kv kubevirt --for condition=Available --timeout=5m                                       
}                                                                                                                       
                                                                                                                        
function kubevirtci::down() {                                                                                           
  make cluster-down -C cluster-up                                                                                       
}                                                                                                                       


function kubevirtci::push-e2e-container() {                                                                                          
    container="localhost:$(cluster-up/cluster-up/cli.sh ports registry)/test-e2e:devel"                               
    make e2e                                                                                            

    cat << EOF > Dockerfile.test-e2e.fast
FROM fedora:35
COPY bin/* /usr/bin/
ENTRYPOINT /usr/bin/test-e2e
EOF

    docker build -f Dockerfile.test-e2e.fast . -t $container                                                                     
    docker push $container                                                     


}                                                                                                                       

function kubevirtci::build() {                                                                                          
    container="localhost:$(cluster-up/cluster-up/cli.sh ports registry)/hypershift:devel"                               
    make build                                                                                                          
    docker build -f Dockerfile.fast . -t $container                                                                     
    docker push $container                                                                                              
}                                                                                                                       
                                                                                                                        
function kubevirtci::ssh() {                                                                                            
    ${_ssh} node01                                                                                                      
}                                                                                                                       

function kubevirtci::cli() {                                                                                            
    ${_cli} $@                                                                                                
}                                                                                                                       

function kubevirtci::rhcos() {                                                                                          
    if [ ! -f rhcos-Dockerfile ]; then                                                                                  
        wget https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-4.9.0-x86_64-openstack.x86_64.qcow2.gz
        gzip -d rhcos-4.9.0-x86_64-openstack.x86_64.qcow2.gz                                                            
        echo 'FROM registry.access.redhat.com/ubi8/ubi:latest AS builder                                                
        ADD --chown=107:107 rhcos-4.9.0-x86_64-openstack.x86_64.qcow2 /disk/                                            
                                                                                                                        
        FROM scratch                                                                                                    
        COPY --from=builder /disk/* /disk/' > rhcos-Dockerfile                                                          
    fi                                                                                                                  
                                                                                                                        
    container="localhost:$(cluster-up/cluster-up/cli.sh ports registry)/rhcos:devel"                                    
    docker build -f rhcos-Dockerfile . -t $container                                                                    
    docker push $container                                                                                              
}                                                                                                                       
                                                                                                                        
function kubevirtci::capk() {                                                                                           
    if [[ "${CAPK_GIT_REMOTE}" == "" || "${CAPK_GIT_BRANCH}" == "" ]]; then                                             
        echo "Must set the Environment variables before: 'CAPK_GIT_REMOTE', 'CAPK_GIT_BRANCH'"                          
        exit 1                                                                                                          
    fi                                                                                                                  
                                                                                                                        
    if [ ! -f capk-Dockerfile ]; then                                                                                   
        git clone -b ${CAPK_GIT_BRANCH} ${CAPK_GIT_REMOTE}  cluster-api-provider-kubevirt                               
        cd cluster-api-provider-kubevirt/                                                                               
        git checkout origin/ignition-authorized-key                                                                     
        go mod tidy                                                                                                     
        make manager                                                                                                    
        cd -                                                                                                            
        echo 'FROM fedora:35                                                   
        ADD --chown=107:107 cluster-api-provider-kubevirt/bin/manager /' > capk-Dockerfile                              
    fi                                                                                                                  
                                                                                                                        
    container="localhost:$(cluster-up/cluster-up/cli.sh ports registry)/capk:devel"                                     
    docker build -f capk-Dockerfile . -t $container                                                                     
    docker push $container                                                                                              
}                                                                                                                       
                                                                                                                        
function kubevirtci::install() {                                                                                        
    container="registry:5000/hypershift:devel"                                                                          
    ./bin/hypershift install --hypershift-image=${container}                                                            
}                                                                                                                       
                                                                                                                        
function kubevirtci::clean() {                                                                                          
    ./bin/hypershift install --render | ${_kubectl} delete -f -                                                         
}                                                                                                                       
                                                                                                                        
function kubevirtci::hosted-oc {                                                                                        
if [[ "${CLUSTER_NAME}" == "" ]]; then                                                                                  
        echo "Must set the Environment variables before: 'CLUSTER_NAME'"                                                
        exit 1                                                                                                          
fi                                                                                                                      
                                                                                                                        
    ${_kubectl} port-forward -n clusters-${CLUSTER_NAME} service/kube-apiserver 6443:6443  > /dev/null 2>&1 &           
    trap 'kill $(jobs -p) > /dev/null 2>&1' EXIT                                                                        
    ./bin/hypershift create kubeconfig --name ${CLUSTER_NAME} --namespace=clusters > .${CLUSTER_NAME}-kubeconfig        
    sleep 0.1                                                                                                           
    oc --kubeconfig .${CLUSTER_NAME}-kubeconfig --insecure-skip-tls-verify --server https://localhost:6443 "$@"         
}                                                                                                                       
                                                                                                                        
function kubevirtci::hypershift-create() {                                                                              
if [[ "${CLUSTER_NAME}" == "" || "${PULL_SECRET}" == "" || "${SSH_KEY}" == "" || "${CAPK_GIT_REMOTE}" == "" || "${CAPK_GIT_BRANCH}" == "" ]]; then
        echo "Must set the Environment variables before: 'CLUSTER_NAME', 'PULL_SECRET', 'SSH_KEY', 'CAPK_GIT_REMOTE',   
        'CAPK_GIT_BRANCH'"                                                                                              
        exit 1                                                                                                          
fi                                                                                                                      
                                                                                                                        
   kubevirtci::up                                                                                                       
   kubevirtci::capk                                                                                                     
   kubevirtci::rhcos                                                                                                    
   kubevirtci::build                                                                                                    
   kubevirtci::install                                                                                                  
   ./bin/hypershift create cluster kubevirt --name ${CLUSTER_NAME} --pull-secret ${PULL_SECRET} --ssh-key ${SSH_KEY} --node-pool-replicas 1
}                                                                                                                       
                                                                                                                        
function kubevirtci::hypershift-destroy() {                                                                             
   kubevirtci::down                                                                                                     
   rm -rf capk-Dockerfile capk-manager cluster-api-provider-kubevirt/                                                   
}                                                                                                                       
                                                                                                                        
                                                                                                                        
kubevirtci::fetch_kubevirtci                                                                                            
                                                                                                                        
case ${_action} in                                                                                                      
"push-e2e-container")
  kubevirtci::push-e2e-container
  ;;
"up")                                                                                                                   
  kubevirtci::up                                                                                                        
  ;;                                                                                                                    
"down")                                                                                                                 
  kubevirtci::down                                                                                                      
  ;;                                                                                                                    
"sync")                                                                                                                 
  kubevirtci::build                                                                                                     
  kubevirtci::install                                                                                                   
  ;;                                                                                                                    
"clean")                                                                                                                
  kubevirtci::clean                                                                                                     
  ;;                                                                                                                    
"kubectl")                                                                                                              
  ${_kubectl} "$@"                                                                                                      
  ;;                                                                                                                    
"virtctl")                                                                                                              
  ${_virtctl} "$@"                                                                                                      
  ;;                                                                                                                    
"hypershift")                                                                                                           
  ./bin/hypershift "$@"                                                                                                 
  ;;                                                                                                                    
"oc")                                                                                                                   
  kubevirtci::hosted-oc "$@"                                                                                            
  ;;                                                                                                                    
"rhcos")                                                                                                                
  kubevirtci::rhcos                                                                                                     
  ;;                                                                                                                    
"capk")                                                                                                                 
  kubevirtci::capk                                                                                                      
  ;;                                                                                                                    
"ssh-node")                                                                                                             
  kubevirtci::ssh                                                                                                       
  ;;                                                                                                                    
"cli")                                                                                                             
  kubevirtci::cli "$@"
  ;;                                                                                                                    
"hypershift-create")                                                                                                    
  kubevirtci::hypershift-create                                                                                         
  ;;                                                                                                                    
"hypershift-destroy")                                                                                                   
  kubevirtci::hypershift-destroy                                                                                        
  ;;                                                                                                                    
*)                                                                                                                      
  echo "!!!!!!!!!!                                                                                                      
        Wrong kubevirtci command, Use one of the options:                                                               
        'kubevirtci <cammand>                                                                                           
                  up                 ==> start a cluster with kubevirt                                                  
                  kubectl capk       ==> Create capk image and deploy it to local registry                              
                  rhcos              ==> Download rhcos image and deploy it to local registry                           
                  sync               ==> build and deploy current hypershift                                            
                  kubectl            ==> Interact with the base kubevirtci cluster                                      
                  hypershift         ==> Run hypershift util commands                                                   
                  oc                 ==> Interact with the hypershift cluster                                           
                  clean              ==> remoe hypershift                                                               
                  down               ==> destroy the cluster                                                            
                  ssh-node           ==> ssh into node1 of the base kubevirtci cluster                                  
                  hypershift-create  ==> Create kubevirtci base cluster and hypershift cluster on it                    
                  hypershift-destroy ==> Destroy kubevirtci base cluster include the hypershift cluster on it           
!!!!!!!!!!"                                                                                                             
  exit 1                                                                                                                
  ;;                                                                                                                    
esac
